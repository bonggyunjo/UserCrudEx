<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="css/style.css" rel="stylesheet"/>
    <link href="css/SignUp.css" rel="stylesheet"/>
    <script src="/static/js/SignUp.js"></script>
    <title> SignUp </title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
<section class="bg-light">
    <div class="container py-4">
        <div class="row align-items-center justify-content-between">
            <a class="navbar-brand hi text-center" href="/signup">
                <span class="text-dark h4"> Sign Up  </span>
            </a>
        </div>
<form id="signupForm" action="/signup" method="post" onsubmit="return validateForm()">
        <div>
            <!-- 아이디 입력 -->
            <div class="form-group">
                <label for="exampleInputEmail1" class="form-label mt-4"> ID </label>
                <div>
                <input type="text" id="id" name="id" value="{{#userDto}}{{userDto.id}}{{/userDto}}" oninput="hideidMessage()" class="form-control" placeholder="ID"/>

                    <button  type="button" id="checkidButton" style="  background : whitesmoke; float:right; left:-315px; position: relative; top:-72px; font-size: 13px; font-weight: bolder" ">
                        중복확인
                    </button>
                </div>
                    {{#valid_id}} <span id="valid_id" style="font-size: 12px; color:red;">{{valid_id}}</span> {{/valid_id}}
                <div><span id="checkId" style="font-size: 13px;"></span></div>




            </div>

            <div class="form-group has-success">
                <!-- 비밀번호 입력 -->
                <label class="form-label mt-4" for="inputValid"> Password </label>
                <input type="password" id="pw" name="pw" value="{{#userDto}}{{userDto.pw}}{{/userDto}}" oninput="hidepwMessage()" class="form-control" placeholder="Password"/>
                {{#valid_pw}} <span id="valid_pw" style="font-size: 12px; color:red;">{{valid_pw}}</span> {{/valid_pw}}


                <div class="valid-feedback"></div>
            </div>
        </div>
        <div class="form-group has-danger">

            <!-- 비밀번호 재확인 입력 -->
            <label class="form-label mt-4" for="inputInvalid"> Re-enter Password </label>
            <input type="password" class="form-control invalid" id="newRe-enterPW" placeholder="CheckPassword">
            <div><span id="checkPw"style="font-size: 13px;" ></span></div>
        </div>
    <div class="form-group-nickname">
        <div>
        <label class="form-label mt-4" for="newNickName">Nickname</label>

        <button  type="button" id="checknicknameButton" style="  background : whitesmoke; float:right; left:-265px; position: relative; top:22px; font-size: 13px; font-weight: bolder">
            중복확인
        </button>
        </div>
        <div class="input-group">
            <input type="nickname" name="nickname" id="nickname" value="{{#userDto}}{{userDto.nickname}}{{/userDto}}" oninput="hidenicknameMessage()" class="form-control" placeholder="nickname" />
        </div>
        {{#valid_nickname}} <span id="valid_nickname" style="font-size: 12px; color:red;">{{valid_nickname}}</span> {{/valid_nickname}}
        <div><span id="checknickname" style="font-size: 13px;"></span></div>
        <!-- 닉네임 중복확인 버튼 -->
    </div>

    <div class="d-grid gap-2">
            <!-- 회원 가입 버튼 -->
            <button class="btn btn-primary btn-lg" type="submit" id="signUpButton" function="submitForm()" style="background: dodgerblue"> Sign UP</button>
        </div>
    </form>
</section>
</body>
</html>

<!-- 스크립트 -->
<script>
    {
        // ID(email) 입력란 변수화
        const idInput = document.querySelector("#id");

        // ID(email) 형식 검증
        const validateEmail = (email) => {
            const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
            return emailPattern.test(email);
        };

        // ID(email) 형식 확인
        const checkEmail = () => {
            const email = idInput.value;
            const emailMessage = document.querySelector("#checkId");

            if (validateEmail(email)) {
                emailMessage.textContent = '일치한 양식입니다.';
                emailMessage.style.color = '#2fb380';
                idInput.classList.remove("is-invalid");
                idInput.classList.add("is-valid");
                const signUpButton = document.querySelector("#signUpButton");
                signUpButton.disabled = false;
            } else {
                emailMessage.textContent = '이메일 양식이 일치하지 않습니다.';
                emailMessage.style.color = '#dc3545';
                idInput.classList.remove("is-valid");
                idInput.classList.add("is-invalid");
                const signUpButton = document.querySelector("#signUpButton");
                signUpButton.disabled = true;
            }
        };

        // ID(email) 입력란에 keyup 이벤트 핸들러 추가
        idInput.addEventListener("keyup", checkEmail);

        // 비밀번호 재확인 입력란 변수화
        const newReEnterPWInput = document.querySelector("#newRe-enterPW");

        // 비밀번호 일치 여부 확인
        const checkPasswordMatch = () => {
            const newPassword = document.querySelector("#pw").value;
            const reEnteredPassword = newReEnterPWInput.value;
            const checkMessage = document.querySelector("#checkPw");

            if (newPassword !== "" || reEnteredPassword !== "") {
                if (newPassword !== reEnteredPassword) {
                    checkMessage.textContent = '비밀번호가 일치하지 않습니다';
                    checkMessage.style.color = '#dc3545';
                    newReEnterPWInput.classList.remove("is-valid");
                    newReEnterPWInput.classList.add("is-invalid");
                } else {
                    checkMessage.textContent = '비밀번호가 일치합니다.';
                    checkMessage.style.color = '#2fb380';
                    newReEnterPWInput.classList.remove("is-invalid");
                    newReEnterPWInput.classList.add("is-valid");
                }
            }
        };
        // 비밀번호 재확인 입력란에 keyup 이벤트 핸들러 추가
        newReEnterPWInput.addEventListener("keyup", checkPasswordMatch);
        // nickname 입력란 변수화
        const nicknameInput = document.querySelector("#nickname");

        // nickname check 메시지

        const checkMessage = document.querySelector("#checkNickName");
    }

    // id 검증메시지 실시간 처리 함수
    function hideidMessage() {
        var input = document.getElementById("id");

        var valid_id = document.getElementById("valid_id");
        if (input.value.trim() != "") {
            valid_id.style.display = "none"; //공백처리
        } else {
            valid_id.style.display = "block";
        }
    }

    // pw 검증메시지 실시간 처리 함수
    function hidepwMessage() {
        var input = document.getElementById("pw");
        var valid_pw = document.getElementById("valid_pw");
        var pattern = new RegExp('(?=.*[0-9])(?=.*[a-zA-Z])(?=.*\\W)(?=\\S+$).{8,16}');

        if (input.value.trim() != "" && pattern.test(input.value)) {
            valid_pw.style.display = "none";
        } else {
            valid_pw.style.display = "block";
        }
    }

    // nickname 검증메시지 실시간 처리 함수
    function hidenicknameMessage() {
        var input = document.getElementById("nickname");

        var valid_nk = document.getElementById("valid_nickname");
        if (input.value.trim() != "") {
            valid_nk.style.display = "none";
        } else
        {
            valid_nk.style.display = "block";
        }
    }
</script>

    <script>

        // 회원가입 유효성 검사 로직

        // 아이디 중복확인
        $("#checkidButton").click(function () {
            var id = $("#id").val();

            if (id.trim() === "") {
                alert("빈칸입니다. 아이디를 입력해주세요");
                return;
            }

            // AJAX 요청
            $.ajax({
                url: "/checkid", // 중복확인을 처리할 서버 URL
                type: "post",
                data: {id: id},
                success: function (response) {
                    // 서버에서 응답을 받았을 때의 처리
                    if (response) {
                        alert("중복된 아이디입니다.");

                    } else { // 그렇지 않다면
                        alert("사용 가능한 아이디입니다.");
                    }
                }
            });
        });
        $("#checknicknameButton").click(function () {

            var nickname = $("#nickname").val();

            if (nickname.trim() === "") {
                alert("빈칸입니다. 닉네임을 입력해주세요");
                return;
            }
            // AJAX 요청을 보냅니다.
            $.ajax({
                url: "/checknickname", // 중복확인을 처리할 서버의 URL
                type: "post",
                data: {nickname: nickname},
                success: function (response) {
                    // 서버에서 응답을 받았을 때의 처리
                    if (response) {
                        alert("중복된 닉네임입니다.");

                    } else {
                        alert("사용 가능한 닉네임입니다.");
                    }
                }
            });
        });
</script>
